# General
seed: 2024
gpu_id: 0
dev: True


# Data paths
# note that file names might trigger certain behaviour (e.g. binary_class and codon)

#train_data_file: "dev_codon_train_8.1k_data.pkl"  # full dataset
#val_data_file: "dev_codon_val_8.1k_data.pkl"
#test_data_file: "dev_codon_test_8.1k_data.pkl"

train_data_file: "codon_train_8.1k_data.pkl"
val_data_file: "codon_val_8.1k_data.pkl"
test_data_file: "codon_test_8.1k_data.pkl"

#train_data_file: "dev_binary_class_balanced_train_9.0k_data.pkl"  # binary, balanced across tissues
#val_data_file: "dev_binary_class_balanced_val_9.0k_data.pkl"
#test_data_file: "dev_binary_class_balanced_test_9.0k_data.pkl"

#train_data_file: "binary_class_balanced_train_9.0k_data.pkl"
#val_data_file: "binary_class_balanced_val_9.0k_data.pkl"
#test_data_file: "binary_class_balanced_test_9.0k_data.pkl"

#train_data_file: "dev_codon_mean_regression_train_8.1k_data.pkl"  # regression, mean across tissues
#val_data_file: "dev_codon_mean_regression_val_8.1k_data.pkl"
#test_data_file: "dev_codon_mean_regression_test_8.1k_data.pkl"

#train_data_file: "codon_mean_regression_train_8.1k_data.pkl"
#val_data_file: "codon_mean_regression_val_8.1k_data.pkl"
#test_data_file: "codon_mean_regression_test_8.1k_data.pkl"

# Optional:
pretrain_path: ""  # path to pretrain model weights
project_path: ""  # project path (data and model weights)
log_file_path: ""


# Data params
max_seq_length: 2700  # IN CODONS => 8100 nucleotides
binary_class: True
scale_targets: False  # only works for binary_class == False
frequency_features: False
random_reverse: True
tissue_id: -1  # 0-28 or -1 for all tissues


# Misc
nr_folds: 3  # if 1, will use val_fraction_of_train or val_data_file as validation set (see below)
concat_train_val: False
evaluate_on_test: False
embedding_max_norm: 2
grad_clip_norm: 0  # 0 or negative â†’ no clipping
mixed_precision: True  # enables torch.cuda.amp if CUDA is available

early_stopper_patience: 8  # disabled if < 0
early_stopper_delta: 0.01

final_evaluation: True  # if True, will evaluate the model on the train val set after training
clean_up_weights: True  # if True, will remove the non-optimal model weights after training


# Optuna params
optuna:
  storage: 'sqlite:////export/share/krausef99dm/tuning_dbs/'  # will set up subfolder for model
  study_name: 'codon_X'
  n_trials: 150
  n_startup_trials: 10
  timeout: 86400  # in seconds (86400 = 24h)

# Scheduler (Cosine Annealing Warm Restarts)
lr_scheduler:
  enable: False  # not used in codon setting
  warmup: 0
#  warmup: 20  # for pretrain
  reset_epochs: 5
  T_mult: 2
  min_lr: 1e-6